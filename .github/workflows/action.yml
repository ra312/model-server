name: CI

on:
  push:
    branches:
      - main
      - "model_server/**"
      - "tests/**"
      - "README.md"
      - "pyproject.toml"
  pull_request:
    branches:
      - main
      - "model_server/**"
      - "tests/**"
      - "README.md"
      - "pyproject.toml"
env:
  PYTHON_VERSION: ${{ secrets.PYTHON_VERSION }}
  POETRY_VERSION: ${{ secrets.POETRY_VERSION }}
  PYPI_USER_NAME: ${{ secrets.PYPI_USER_NAME }}
  PYPI_USER_PASSWORD: ${{ secrets.PYPI_USER_PASSWORD }}

jobs:
  install-deps-and-test:
    name: Install Poetry and Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org/ | POETRY_VERSION=${{ env.POETRY_VERSION }} python
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies and main package
        run: |
          poetry install --no-root
          poetry install
          poetry run pre-commit run --all-files --color always || true
          poetry run coverage run --omit 'tests/*' -m pytest
          poetry run coverage report -m > coverage.txt
          total_coverage=$(tail -n 1 coverage.txt  | awk '{print $NF}' | sed 's/%//')
          if ((total_coverage < 70)); then
              echo "Coverage is below 70%: $total_coverage%"
              exit 1
          else
              echo "Coverage is $total_coverage%"
          fi
      - name: Upload coverage to codecov.io
        run: bash <(curl -s https://codecov.io/bash)
        if: always()
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish to PyPI
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TWINE_USERNAME: ${{ env.PYPI_USER_NAME }}
          TWINE_PASSWORD: ${{ env.PYPI_USER_PASSWORD }}
          TWINE_NON_INTERACTIVE: 0
        run: |
          rm -rf dist
          poetry build -f wheel
          poetry run twine upload --skip-existing dist/*
